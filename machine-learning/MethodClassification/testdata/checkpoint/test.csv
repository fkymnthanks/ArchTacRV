text,label
lambda$null$7 - [org.springframework.transaction.reactive.TransactionCallback  org.springframework.transaction.ReactiveTransaction] - org.reactivestreams.Publisher - [java.lang.Object:getClass  java.lang.Object:getClass  java.lang.Object:getClass  reactor.core.publisher.Flux:onErrorResume],0
lambda$null$5 - [org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo] - org.reactivestreams.Publisher - [org.springframework.core.ReactiveAdapter:toPublisher],0
toString - [] - java.lang.String - [java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
parseTransactionAnnotation - [java.lang.reflect.AnnotatedElement] - org.springframework.transaction.interceptor.TransactionAttribute - [org.springframework.transaction.annotation.JtaTransactionAnnotationParser:parseTransactionAnnotation  org.springframework.transaction.annotation.JtaTransactionAnnotationParser:parseTransactionAnnotation  java.lang.StringBuilder:append  org.springframework.core.annotation.AnnotationAttributes:getEnum  java.lang.Enum:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setPropagationBehaviorName  org.springframework.core.annotation.AnnotationAttributes:getClassArray  org.springframework.core.annotation.AnnotationAttributes:getClassArray  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setRollbackRules],0
rollbackOn - [java.lang.Throwable] - boolean - [java.lang.Object:getClass  java.lang.Class:getAnnotation],0
findTransactionAttribute - [java.lang.Class] - org.springframework.transaction.interceptor.TransactionAttribute - [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource:determineTransactionAttribute  org.springframework.transaction.annotation.AnnotationTransactionAttributeSource:determineTransactionAttribute],0
getRecordFactory - [] - javax.resource.cci.RecordFactory - [org.springframework.jca.cci.connection.DelegatingConnectionFactory:obtainTargetConnectionFactory],0
doWork - [javax.resource.spi.work.Work] - void - [org.springframework.jca.work.SimpleTaskWorkManager:doWork  org.springframework.jca.work.SimpleTaskWorkManager:executeWork],0
stop - [] - void - [org.springframework.jca.endpoint.GenericMessageEndpointManager:getResourceAdapter  org.springframework.jca.endpoint.GenericMessageEndpointManager:getMessageEndpointFactory  org.springframework.jca.endpoint.GenericMessageEndpointManager:getActivationSpec  org.springframework.jca.endpoint.GenericMessageEndpointManager:stop],0
getObjectType - [] - java.lang.Class - [java.lang.Object:getClass],0
equals - [java.lang.Object] - boolean - [org.springframework.transaction.reactive.TransactionalOperatorImpl:getTransactionManager  org.springframework.transaction.reactive.TransactionalOperatorImpl:getTransactionManager],0
suspend - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.lang.Object] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.TransactionSynchronizationManager:isSynchronizationActive  reactor.core.publisher.Mono:flatMap  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doSuspend  reactor.core.publisher.Mono:map  reactor.core.publisher.Mono:defaultIfEmpty  reactor.core.publisher.Mono:map],0
test - [java.lang.Object] - boolean - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates$2:test],0
getJndiEnvironment - [] - java.util.Properties - [org.springframework.jndi.JndiTemplate:getEnvironment],0
<init> - [javax.ejb.TransactionAttributeType] - void - [java.lang.StringBuilder:append  javax.ejb.TransactionAttributeType:name  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser$Ejb3TransactionAttribute:setPropagationBehaviorName],0
lambda$null$8 - [org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo] - org.reactivestreams.Publisher - [reactor.core.publisher.Flux:onErrorResume  reactor.core.publisher.Mono:then],0
registerTransactionManager - [org.w3c.dom.Element  org.springframework.beans.factory.config.BeanDefinition] - void - [org.springframework.beans.MutablePropertyValues:add],0
lambda$suspend$14 - [java.lang.Object  org.springframework.transaction.reactive.TransactionSynchronizationManager  java.util.List] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doSuspend  reactor.core.publisher.Mono:map  reactor.core.publisher.Mono:defaultIfEmpty  reactor.core.publisher.Mono:map  reactor.core.publisher.Mono:onErrorResume],0
checkUserTransactionAndTransactionManager - [] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
toString - [] - java.lang.String - [java.lang.Object:toString],0
getCurrentTransactionName - [] - java.lang.String - [org.springframework.transaction.reactive.TransactionContext:getCurrentTransactionName],0
<init> - [org.springframework.transaction.TransactionManager  org.springframework.transaction.interceptor.TransactionAttributeSource] - void - [org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionManager  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionAttributeSource  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionManager  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionAttributeSource  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionManager  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionAttributes],0
prepareTransactionInfo - [org.springframework.transaction.PlatformTransactionManager  org.springframework.transaction.interceptor.TransactionAttribute  java.lang.String  org.springframework.transaction.TransactionStatus] - org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo - [java.lang.StringBuilder:append  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getJoinpointIdentification  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:newTransactionStatus  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
setConnectionSpecForCurrentThread - [javax.resource.cci.ConnectionSpec] - void - [java.lang.ThreadLocal:set],0
applyTimeout - [org.springframework.transaction.jta.JtaTransactionObject  int] - void - [org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction],0
createInputRecord - [javax.resource.cci.RecordFactory  java.lang.Object] - javax.resource.cci.Record - [org.springframework.jca.cci.object.MappingCommAreaOperation:objectToBytes],0
hashCode - [] - int - [java.lang.Object:hashCode],0
getTransactionAttribute - [java.lang.reflect.Method  java.lang.Class] - org.springframework.transaction.interceptor.TransactionAttribute - [org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource:initMethodMap],0
createTransactionIfNecessary - [org.springframework.transaction.ReactiveTransactionManager  org.springframework.transaction.interceptor.TransactionAttribute  java.lang.String] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:map  reactor.core.publisher.Mono:switchIfEmpty],0
access$500 - [org.springframework.transaction.jta.WebSphereUowTransactionManager  org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.jta.WebSphereUowTransactionManager:triggerBeforeCompletion],0
values - [] - org.springframework.transaction.event.TransactionPhase[] - [org.springframework.transaction.event.TransactionPhase[]:clone],0
doJtaSuspend - [org.springframework.transaction.jta.JtaTransactionObject] - java.lang.Object - [org.springframework.transaction.jta.JtaTransactionManager:getTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:getTransactionManager],0
currentTransactionInfo - [] - org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo - [java.lang.ThreadLocal:get],0
longResult - [java.util.Collection] - long - [java.lang.Number:longValue],0
setProperties - [java.util.Properties] - void - [java.util.Properties:propertyNames  java.util.Properties:getProperty  org.springframework.transaction.interceptor.TransactionAttributeEditor:setAsText  org.springframework.transaction.interceptor.TransactionAttributeEditor:getValue  org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource:addTransactionalMethod],0
toString - [] - java.lang.String - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
createIndexedRecord - [java.lang.String] - javax.resource.cci.IndexedRecord - [org.springframework.jca.cci.core.CciTemplate:getRecordFactory],0
resumeAfterBeginException - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.lang.Object  org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:doOnError],0
isExistingTransaction - [java.lang.Object] - boolean - [org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:hasConnectionHolder],0
reset - [] - void - [org.springframework.transaction.support.ResourceHolderSupport:clear],0
sameResourceFactory - [org.springframework.transaction.support.ResourceTransactionManager  java.lang.Object] - boolean - [java.lang.Object:equals],0
afterCommit - [] - void - [org.springframework.transaction.support.ResourceHolderSynchronization:shouldReleaseBeforeCompletion  org.springframework.transaction.support.ResourceHolderSynchronization:processResourceAfterCommit],0
equals - [java.lang.Object] - boolean - [org.springframework.jca.context.SpringContextResourceAdapter:getContextConfigLocation  org.springframework.jca.context.SpringContextResourceAdapter:getContextConfigLocation],0
getResource - [java.lang.Object] - java.lang.Object - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.transaction.reactive.TransactionContext:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
setCurrentTransactionName - [java.lang.String] - void - [java.lang.ThreadLocal:set],0
setActualTransactionActive - [boolean] - void - [org.springframework.transaction.reactive.TransactionContext:setActualTransactionActive],0
init - [] - void - [org.springframework.transaction.config.TxNamespaceHandler:registerBeanDefinitionParser  org.springframework.transaction.config.TxNamespaceHandler:registerBeanDefinitionParser  org.springframework.transaction.config.TxNamespaceHandler:registerBeanDefinitionParser],0
createTransactionIfNecessary - [org.springframework.transaction.PlatformTransactionManager  org.springframework.transaction.interceptor.TransactionAttribute  java.lang.String] - org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAspectSupport:prepareTransactionInfo],0
afterCompletion - [int] - void - [org.springframework.transaction.support.ResourceHolderSynchronization:shouldUnbindAtCompletion  org.springframework.transaction.support.ResourceHolderSynchronization:shouldReleaseAfterCompletion  org.springframework.transaction.support.ResourceHolderSynchronization:releaseResource  org.springframework.transaction.support.ResourceHolderSynchronization:cleanupResource],0
commitTransaction - [org.springframework.transaction.TransactionStatus] - void - [org.springframework.jdbc.datasource.DataSourceTransactionManager:commit],5
<init> - [javax.resource.cci.ConnectionFactory] - void - [org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy:setTargetConnectionFactory  org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy:afterPropertiesSet],0
execute - [java.lang.Object] - java.lang.Object - [org.springframework.jca.cci.object.MappingRecordOperation:getInteractionSpec  org.springframework.jca.cci.object.MappingRecordOperation:getCciTemplate  org.springframework.jca.cci.core.CciTemplate:execute],0
setIsolationLevelName - [java.lang.String] - void - [java.lang.String:startsWith  org.springframework.core.Constants:asNumber  java.lang.Number:intValue  org.springframework.transaction.support.DefaultTransactionDefinition:setIsolationLevel],0
invoke - [org.aopalliance.intercept.MethodInvocation] - java.lang.Object - [org.springframework.jca.endpoint.GenericMessageEndpointFactory$GenericMessageEndpoint:hasBeforeDeliveryBeenCalled  org.springframework.jca.endpoint.GenericMessageEndpointFactory$GenericMessageEndpoint:beforeDelivery  org.springframework.jca.endpoint.GenericMessageEndpointFactory$GenericMessageEndpoint:afterDelivery  org.springframework.jca.endpoint.GenericMessageEndpointFactory$GenericMessageEndpoint:onEndpointException  org.springframework.jca.endpoint.GenericMessageEndpointFactory$GenericMessageEndpoint:afterDelivery],0
createTransaction - [java.lang.String  int] - javax.transaction.Transaction - [org.springframework.transaction.jta.JtaTransactionManager:getTransactionManager],0
executeWork - [org.springframework.core.task.TaskExecutor  javax.resource.spi.work.Work  long  boolean  javax.resource.spi.work.ExecutionContext  javax.resource.spi.work.WorkListener] - long - [javax.resource.spi.work.ExecutionContext:getXid  java.lang.StringBuilder:append  javax.resource.spi.work.ExecutionContext:getXid  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  javax.resource.spi.work.WorkException:setErrorCode  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  javax.resource.spi.work.WorkException:setErrorCode  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  javax.resource.spi.work.WorkException:setErrorCode  java.lang.Object:wait  java.lang.Thread:interrupt],0
access$200 - [org.springframework.transaction.jta.WebSphereUowTransactionManager  org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.jta.WebSphereUowTransactionManager:triggerBeforeCommit],0
addTransactionalMethod - [java.lang.String  org.springframework.transaction.interceptor.TransactionAttribute] - void - [java.lang.String:lastIndexOf  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.String:substring  java.lang.String:substring  org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource:addTransactionalMethod  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.Class:getDeclaredMethods  java.lang.reflect.Method:getName  org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource:isMatch  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.String:equals  java.lang.String:length  java.lang.String:length  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource:addTransactionalMethod  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
invokeAfterCommit - [java.util.Collection] - reactor.core.publisher.Mono - [reactor.core.publisher.Flux:concatMap  reactor.core.publisher.Flux:then],0
resume - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.lang.Object  org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doResume  org.springframework.transaction.reactive.TransactionSynchronizationManager:setActualTransactionActive  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionIsolationLevel  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionReadOnly  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionName  reactor.core.publisher.Mono:then],0
equals - [java.lang.Object] - boolean - [org.springframework.transaction.support.DefaultTransactionDefinition:toString  java.lang.Object:toString  java.lang.String:equals],0
execute - [java.lang.Runnable] - void - [org.springframework.jca.work.WorkManagerTaskExecutor:execute  javax.resource.spi.work.WorkRejectedException:getErrorCode  java.lang.String:equals  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
doSetRollbackOnly - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  java.lang.StringBuilder:append  org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:getConnectionHolder  org.springframework.jca.cci.connection.ConnectionHolder:getConnection  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:getConnectionHolder  org.springframework.jca.cci.connection.ConnectionHolder:setRollbackOnly],0
retrieveTransactionManager - [] - javax.transaction.TransactionManager - [java.lang.Object:getClass  java.lang.Class:getMethod  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException],0
getSynchronizations - [] - java.util.List - [java.lang.ThreadLocal:get],0
destroy - [] - void - [org.springframework.jca.cci.connection.SingleConnectionFactory:resetConnection],0
setCurrentTransactionIsolationLevel - [java.lang.Integer] - void - [org.springframework.transaction.reactive.TransactionContext:setCurrentTransactionIsolationLevel],0
isActualTransactionActive - [] - boolean - [java.lang.ThreadLocal:get],0
lambda$cleanupAfterCompletion$33 - [org.springframework.transaction.reactive.GenericReactiveTransaction  org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:setCompleted  org.springframework.transaction.reactive.GenericReactiveTransaction:isNewSynchronization  org.springframework.transaction.reactive.TransactionSynchronizationManager:clear  org.springframework.transaction.reactive.GenericReactiveTransaction:isNewTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:getTransaction  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doCleanupAfterCompletion  org.springframework.transaction.reactive.GenericReactiveTransaction:getSuspendedResources  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.GenericReactiveTransaction:hasTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:getTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:getSuspendedResources  reactor.core.publisher.Mono:then],0
lambda$null$3 - [org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:onErrorResume  reactor.core.publisher.Mono:then],0
triggerAfterCommit - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:isDebug],0
isRollbackOnly - [java.lang.Object] - boolean - [org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:getConnectionHolder  org.springframework.jca.cci.connection.ConnectionHolder:isRollbackOnly],0
doParse - [org.w3c.dom.Element  org.springframework.beans.factory.xml.ParserContext  org.springframework.beans.factory.support.BeanDefinitionBuilder] - void - [org.springframework.beans.factory.support.BeanDefinitionBuilder:addPropertyReference  org.springframework.beans.factory.xml.ParserContext:getReaderContext  org.springframework.beans.factory.xml.XmlReaderContext:error  org.springframework.beans.factory.support.BeanDefinitionBuilder:addPropertyValue  org.springframework.beans.factory.support.BeanDefinitionBuilder:addPropertyValue],0
createRecord - [org.springframework.jca.cci.core.RecordCreator] - javax.resource.cci.Record - [org.springframework.jca.cci.core.CciTemplate:getRecordFactory],0
afterPropertiesSet - [] - void - [org.springframework.transaction.jta.JtaTransactionManager:afterPropertiesSet],0
start - [javax.resource.spi.BootstrapContext] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.jca.context.SpringContextResourceAdapter:createApplicationContext],0
doRollbackOnCommitException - [org.springframework.transaction.support.DefaultTransactionStatus  java.lang.Throwable] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isNewTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.AbstractPlatformTransactionManager:doRollback  org.springframework.transaction.support.DefaultTransactionStatus:hasTransaction  org.springframework.transaction.support.AbstractPlatformTransactionManager:isGlobalRollbackOnParticipationFailure  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.AbstractPlatformTransactionManager:doSetRollbackOnly],0
commit - [org.springframework.transaction.ReactiveTransaction] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:flatMap],0
loadWebLogicTransactionHelper - [] - java.lang.Object - [java.lang.Object:getClass  java.lang.Class:getClassLoader  java.lang.ClassLoader:loadClass  java.lang.Class:getMethod  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException],0
getResourceMap - [] - java.util.Map - [java.lang.ThreadLocal:get],0
doCleanupAfterCompletion - [java.lang.Object] - void - [org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:getConnectionHolder  org.springframework.jca.cci.connection.ConnectionHolder:clear  org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:getConnectionHolder  org.springframework.jca.cci.connection.ConnectionHolder:getConnection  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
doExecute - [javax.resource.cci.InteractionSpec  javax.resource.cci.Record  javax.resource.cci.Record  org.springframework.jca.cci.core.RecordExtractor] - java.lang.Object - [org.springframework.jca.cci.core.CciTemplate:execute],0
equals - [java.lang.Object] - boolean - [org.springframework.transaction.support.TransactionTemplate:getTransactionManager  org.springframework.transaction.support.TransactionTemplate:getTransactionManager],0
lambda$currentContext$0 - [reactor.util.context.Context  reactor.core.publisher.SynchronousSink] - void - [org.springframework.transaction.reactive.TransactionContextHolder:hasContext  org.springframework.transaction.reactive.TransactionContextHolder:currentContext],0
<clinit> - [] - void - [java.lang.Class:getClassLoader  java.lang.Class:getClassLoader],0
registerSynchronization - [org.springframework.transaction.support.TransactionSynchronization] - void - [java.lang.ThreadLocal:get],0
flush - [] - void - [org.springframework.transaction.support.ResourceHolderSynchronization:flushResource],0
equals - [java.lang.Object] - boolean - [java.lang.Object:equals],0
equals - [java.lang.Object] - boolean - [java.lang.String:equals],0
toString - [] - java.lang.String - [java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
clearSynchronization - [] - void - [org.springframework.transaction.reactive.TransactionSynchronizationManager:isSynchronizationActive  org.springframework.transaction.reactive.TransactionContext:setSynchronizations],0
onEndpointException - [java.lang.Throwable] - void - [org.springframework.jca.endpoint.AbstractMessageEndpointFactory$TransactionDelegate:setRollbackOnly],0
doGetResource - [java.lang.Object] - java.lang.Object - [org.springframework.transaction.reactive.TransactionContext:getResources],0
<clinit> - [] - void - [java.lang.Class:getClassLoader],0
isNewTransaction - [] - boolean - [org.springframework.transaction.reactive.GenericReactiveTransaction:hasTransaction],0
getCurrentTransactionIsolationLevel - [] - java.lang.Integer - [java.lang.ThreadLocal:get],0
clearSynchronization - [] - void - [java.lang.ThreadLocal:remove],0
extractOutputData - [javax.resource.cci.Record] - java.lang.Object - [org.springframework.jca.cci.core.support.CommAreaRecord:toByteArray  org.springframework.jca.cci.object.MappingCommAreaOperation:bytesToObject],0
afterPropertiesSet - [] - void - [org.springframework.jca.endpoint.GenericMessageEndpointManager:getResourceAdapter  org.springframework.jca.endpoint.GenericMessageEndpointManager:getMessageEndpointFactory  org.springframework.jca.endpoint.GenericMessageEndpointManager:getActivationSpec  org.springframework.jca.endpoint.GenericMessageEndpointManager:getResourceAdapter  org.springframework.jca.endpoint.GenericMessageEndpointManager:getResourceAdapter  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
detectPersistenceExceptionTranslators - [org.springframework.beans.factory.ListableBeanFactory] - org.springframework.dao.support.PersistenceExceptionTranslator - [org.springframework.dao.support.ChainedPersistenceExceptionTranslator:addDelegate],0
hashCode - [] - int - [java.lang.Object:hashCode],0
doResume - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.lang.Object  java.lang.Object] - reactor.core.publisher.Mono - [java.lang.StringBuilder:append  java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
beginTransaction - [] - org.springframework.transaction.TransactionStatus - [org.springframework.transaction.support.DataSourceTransactionManager:getTransaction],1
failService - [com.springtx.transaction.TransactionManager:rollbackTransaction  org.slf4j.Logger:info],3
<init> - [java.lang.Class] - void - [java.lang.Class:isAssignableFrom  java.lang.StringBuilder:append  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.Class:getName],0
doUnbindResource - [java.lang.Object] - java.lang.Object - [org.springframework.transaction.reactive.TransactionContext:getResources  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.transaction.reactive.TransactionContext:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
lookupTransactionSynchronizationRegistry - [java.lang.String] - javax.transaction.TransactionSynchronizationRegistry - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.JtaTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
parseTransactionAnnotation - [java.lang.reflect.AnnotatedElement] - org.springframework.transaction.interceptor.TransactionAttribute - [org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser:parseTransactionAnnotation],0
<init> - [java.lang.String  java.lang.Class  java.lang.reflect.Method] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
doGetConnection - [javax.resource.cci.ConnectionSpec] - javax.resource.cci.Connection - [org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter:getTargetConnectionFactory],0
test - [java.lang.Object] - boolean - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates$1:test],0
<init> - [] - void - [java.lang.Object:getClass],0
<init> - [java.lang.String  java.sql.SQLException] - void - [java.sql.SQLException:getMessage],0
setConnectionFactory - [javax.resource.cci.ConnectionFactory] - void - [org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy:getTargetConnectionFactory],0
doCreateConnection - [] - javax.resource.cci.Connection - [org.springframework.jca.cci.connection.SingleConnectionFactory:getTargetConnectionFactory],0
getCloseSuppressingConnectionProxy - [javax.resource.cci.Connection] - javax.resource.cci.Connection - [java.lang.Class:getClassLoader],0
registerSynchronization - [org.springframework.transaction.reactive.TransactionSynchronization] - void - [org.springframework.transaction.reactive.TransactionContext:getSynchronizations],0
lookupDefaultUowManager - [] - com.ibm.wsspi.uow.UOWManager - [org.springframework.transaction.jta.WebSphereUowTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup],0
hashCode - [] - int - [java.lang.Object:hashCode],0
contains - [java.lang.Class] - boolean - [java.lang.Class:isInstance],0
toString - [] - java.lang.String - [java.lang.Object:toString],0
setTransactionAttributes - [java.util.Properties] - void - [org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionAttributes],0
findTransactionManager - [javax.transaction.UserTransaction] - javax.transaction.TransactionManager - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.JtaTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
doBegin - [java.lang.Object  org.springframework.transaction.TransactionDefinition] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.jca.cci.connection.ConnectionHolder:setSynchronizedWithTransaction  org.springframework.jca.cci.connection.CciLocalTransactionManager:determineTimeout  org.springframework.jca.cci.connection.ConnectionHolder:setTimeoutInSeconds  org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:setConnectionHolder],0
getObjectType - [] - java.lang.Class - [java.lang.Object:getClass],0
rollbackToSavepoint - [java.lang.Object] - void - [org.springframework.transaction.support.AbstractTransactionStatus:getSavepointManager],0
doRollbackOnCommitException - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:onErrorResume  reactor.core.publisher.Mono:then],0
asPlatformTransactionManager - [java.lang.Object] - org.springframework.transaction.PlatformTransactionManager - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
lambda$getOrCreateContext$2 - [reactor.util.context.Context] - reactor.util.context.Context - [org.springframework.transaction.reactive.TransactionContextHolder:hasContext  org.springframework.transaction.reactive.TransactionContextHolder:currentContext  org.springframework.transaction.reactive.TransactionContextHolder:createContext],0
<init> - [javax.resource.cci.ConnectionFactory] - void - [org.springframework.jca.cci.connection.CciLocalTransactionManager:setConnectionFactory  org.springframework.jca.cci.connection.CciLocalTransactionManager:afterPropertiesSet],0
beforeDelivery - [java.lang.reflect.Method] - void - [org.springframework.jca.endpoint.AbstractMessageEndpointFactory$TransactionDelegate:beginTransaction  java.lang.Thread:getContextClassLoader  org.springframework.jca.endpoint.AbstractMessageEndpointFactory$AbstractMessageEndpoint:getEndpointClassLoader  java.lang.Thread:setContextClassLoader],0
parseAttributeSource - [org.w3c.dom.Element  org.springframework.beans.factory.xml.ParserContext] - org.springframework.beans.factory.support.RootBeanDefinition - [org.springframework.beans.factory.xml.ParserContext:extractSource  org.springframework.beans.factory.support.ManagedMap:setSource  org.springframework.beans.factory.xml.ParserContext:extractSource  org.springframework.beans.factory.config.TypedStringValue:setSource  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setPropagationBehaviorName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setIsolationLevelName  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setTimeout  org.springframework.beans.factory.xml.ParserContext:getReaderContext  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.beans.factory.xml.XmlReaderContext:error  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setReadOnly  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setRollbackRules  org.springframework.beans.factory.support.ManagedMap:put  org.springframework.beans.factory.xml.ParserContext:extractSource  org.springframework.beans.factory.support.RootBeanDefinition:setSource  org.springframework.beans.factory.support.RootBeanDefinition:getPropertyValues  org.springframework.beans.MutablePropertyValues:add],0
initTransactionSynchronizationRegistry - [] - void - [org.springframework.transaction.jta.JtaTransactionManager:lookupTransactionSynchronizationRegistry  org.springframework.transaction.jta.JtaTransactionManager:retrieveTransactionSynchronizationRegistry  org.springframework.transaction.jta.JtaTransactionManager:findTransactionSynchronizationRegistry  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
registerTransactionalEventListenerFactory - [org.springframework.beans.factory.xml.ParserContext] - void - [org.springframework.beans.factory.support.RootBeanDefinition:setBeanClass  org.springframework.beans.factory.xml.ParserContext:registerBeanComponent],0
getTransactionAwareConnectionProxy - [javax.resource.cci.Connection  javax.resource.cci.ConnectionFactory] - javax.resource.cci.Connection - [java.lang.Class:getClassLoader],0
<init> - [] - void - [org.springframework.transaction.jta.WebSphereUowTransactionManager:setAutodetectTransactionManager],0
triggerBeforeCompletion - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:isNewSynchronization  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.TransactionSynchronizationManager:getSynchronizations],0
invokeWithinTransaction - [java.lang.reflect.Method  java.lang.Class  org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback  org.springframework.transaction.interceptor.TransactionAttribute  org.springframework.transaction.ReactiveTransactionManager] - java.lang.Object - [java.lang.reflect.Method:getReturnType  java.lang.Class:isAssignableFrom  reactor.core.publisher.Mono:flatMap  reactor.core.publisher.Mono:subscriberContext  reactor.core.publisher.Mono:subscriberContext  reactor.core.publisher.Mono:flatMapMany  reactor.core.publisher.Flux:subscriberContext  reactor.core.publisher.Flux:subscriberContext  org.springframework.core.ReactiveAdapter:fromPublisher],0
computeTransactionAttribute - [java.lang.reflect.Method  java.lang.Class] - org.springframework.transaction.interceptor.TransactionAttribute - [org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource:allowPublicMethodsOnly  java.lang.reflect.Method:getModifiers  org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource:findTransactionAttribute  java.lang.reflect.Method:getDeclaringClass  org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource:findTransactionAttribute  org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource:findTransactionAttribute  java.lang.reflect.Method:getDeclaringClass  org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource:findTransactionAttribute],0
hashCode - [] - int - [org.springframework.transaction.support.DefaultTransactionDefinition:toString  java.lang.String:hashCode],0
execute - [org.springframework.transaction.TransactionDefinition  org.springframework.transaction.support.TransactionCallback] - java.lang.Object - [org.springframework.transaction.jta.WebSphereUowTransactionManager:getTransactionSynchronization  org.springframework.transaction.jta.WebSphereUowTransactionManager:getTransactionSynchronization  org.springframework.transaction.jta.WebSphereUowTransactionManager:getTransactionSynchronization  org.springframework.transaction.jta.WebSphereUowTransactionManager:getTransactionSynchronization  org.springframework.transaction.jta.WebSphereUowTransactionManager:getTransactionSynchronization  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.WebSphereUowTransactionManager:suspend  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.WebSphereUowTransactionManager$UOWActionAdapter:getResult  org.springframework.transaction.jta.WebSphereUowTransactionManager:resume  org.springframework.transaction.jta.WebSphereUowTransactionManager$UOWActionAdapter:getException  org.springframework.transaction.TransactionSystemException:initApplicationException  org.springframework.transaction.jta.WebSphereUowTransactionManager:resume],0
resume - [java.lang.Object  org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder] - void - [org.springframework.transaction.support.AbstractPlatformTransactionManager:doResume],0
lambda$completeTransactionAfterThrowing$13 - [java.lang.Throwable  java.lang.Throwable] - java.lang.Throwable - [org.springframework.transaction.TransactionSystemException:initApplicationException],0
lambda$processCommit$24 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:onErrorResume  reactor.core.publisher.Mono:then],0
getTransactionAttribute - [java.lang.reflect.Method  java.lang.Class] - org.springframework.transaction.interceptor.TransactionAttribute - [java.lang.reflect.Method:getName  org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource:isMatch  java.lang.String:length  java.lang.String:length],0
setAsText - [java.lang.String] - void - [java.lang.String:trim  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.String:startsWith  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setPropagationBehaviorName  java.lang.String:startsWith  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setIsolationLevelName  java.lang.String:startsWith  java.lang.String:length  java.lang.String:substring  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setTimeout  java.lang.String:equals  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setReadOnly  java.lang.String:startsWith  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:getRollbackRules  java.lang.String:substring  java.lang.String:startsWith  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:getRollbackRules  java.lang.String:substring  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAttributeEditor:setValue  org.springframework.transaction.interceptor.TransactionAttributeEditor:setValue],0
obtainConnectionFactory - [] - javax.resource.cci.ConnectionFactory - [org.springframework.jca.cci.connection.CciLocalTransactionManager:getConnectionFactory],0
execute - [org.springframework.jca.cci.core.ConnectionCallback] - java.lang.Object - [org.springframework.jca.cci.core.CciTemplate:getConnectionSpec  org.springframework.jca.cci.core.CciTemplate:getConnectionFactory  org.springframework.jca.cci.core.CciTemplate:getConnectionFactory  org.springframework.jca.cci.core.CciTemplate:execute  org.springframework.jca.cci.core.CciTemplate:doExecute  org.springframework.jca.cci.core.CciTemplate:doExecute  org.springframework.jca.cci.core.CciTemplate:createRecord  org.springframework.jca.cci.core.CciTemplate:doExecute  org.springframework.jca.cci.core.CciTemplate:doExecute  org.springframework.jca.cci.core.CciTemplate:createRecord  org.springframework.jca.cci.core.CciTemplate:doExecute],0
suspend - [] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.TransactionSynchronizationManager:unbindResource],0
setIsolationLevel - [int] - void - [org.springframework.core.Constants:getValues],0
lambda$commit$20 - [org.springframework.transaction.ReactiveTransaction  org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:isRollbackOnly  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug],0
getCurrentTransactionName - [] - java.lang.String - [java.lang.ThreadLocal:get],0
bindResource - [java.lang.Object  java.lang.Object] - void - [java.lang.ThreadLocal:get  java.lang.ThreadLocal:set  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.Thread:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.Thread:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
equals - [java.lang.Object] - boolean - [org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:getTransactionAttributeSource  org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:getTransactionAttributeSource],0
findTransactionSynchronizationRegistry - [javax.transaction.UserTransaction  javax.transaction.TransactionManager] - javax.transaction.TransactionSynchronizationRegistry - [org.springframework.transaction.jta.JtaTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
lambda$null$1 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean  java.util.Optional] - reactor.core.publisher.Mono - [java.util.Optional:orElse  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doBegin  reactor.core.publisher.Mono:doOnSuccess  reactor.core.publisher.Mono:thenReturn],0
createApplicationContext - [javax.resource.spi.BootstrapContext] - org.springframework.context.ConfigurableApplicationContext - [java.lang.Object:getClass  java.lang.Class:getClassLoader  org.springframework.jca.context.ResourceAdapterApplicationContext:setClassLoader  org.springframework.jca.context.SpringContextResourceAdapter:getContextConfigLocation  org.springframework.jca.context.SpringContextResourceAdapter:loadBeanDefinitions  org.springframework.jca.context.ResourceAdapterApplicationContext:refresh],0
parse - [org.w3c.dom.Element  org.springframework.beans.factory.xml.ParserContext] - org.springframework.beans.factory.config.BeanDefinition - [java.lang.String:equals  java.lang.Object:getClass  java.lang.Class:getClassLoader],0
lambda$suspend$15 - [java.util.Optional] - org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder - [java.util.Optional:orElse],0
getOrder - [] - int - [org.springframework.context.event.ApplicationListenerMethodAdapter:getOrder],0
<init> - [org.springframework.transaction.support.TransactionSynchronization  javax.transaction.UserTransaction] - void - [java.lang.Object:getClass  java.lang.Class:getName  java.lang.String:startsWith  java.lang.Object:getClass  java.lang.Class:getName  java.lang.String:startsWith],0
retrieveUserTransaction - [] - javax.transaction.UserTransaction - [java.lang.Object:getClass  java.lang.Class:getMethod  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException],0
doGetConnection - [javax.resource.cci.ConnectionFactory] - javax.resource.cci.Connection - [org.springframework.jca.cci.connection.ConnectionHolder:getConnection  org.springframework.jca.cci.connection.ConnectionHolder:setSynchronizedWithTransaction],0
getAttributeDescription - [] - java.lang.StringBuilder - [org.springframework.transaction.interceptor.DefaultTransactionAttribute:getDefinitionDescription  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append],0
setConnectionFactory - [javax.resource.cci.ConnectionFactory] - void - [org.springframework.jca.cci.core.CciTemplate:setConnectionFactory],0
createTransaction - [java.lang.String  int] - javax.transaction.Transaction - [org.springframework.transaction.jta.WebLogicJtaTransactionManager:getUserTransaction  java.lang.reflect.Method:invoke  org.springframework.transaction.jta.WebLogicJtaTransactionManager:getUserTransaction  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException  java.lang.reflect.InvocationTargetException:getTargetException  java.lang.reflect.InvocationTargetException:getTargetException  java.lang.reflect.InvocationTargetException:getTargetException  java.lang.reflect.InvocationTargetException:getTargetException  java.lang.reflect.InvocationTargetException:getTargetException  java.lang.StringBuilder:append  java.lang.reflect.InvocationTargetException:getTargetException  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
setCurrentTransactionName - [java.lang.String] - void - [org.springframework.transaction.reactive.TransactionContext:setCurrentTransactionName],0
unbindResource - [java.lang.Object] - java.lang.Object - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.transaction.reactive.TransactionContext:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
setActualTransactionActive - [boolean] - void - [java.lang.ThreadLocal:set],0
commitTransactionAfterReturning - [org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo] - void - [org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionStatus  java.lang.StringBuilder:append  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getJoinpointIdentification  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionStatus],0
rollbackTransaction - [org.springframework.transaction.TransactionStatus] - void - [org.springframework.jdbc.datasource.DataSourceTransactionManager:rollback],4
getSynchronizations - [] - java.util.List - [org.springframework.transaction.reactive.TransactionContext:getSynchronizations],0
lambda$invokeWithinTransaction$1 - [org.springframework.transaction.PlatformTransactionManager  org.springframework.transaction.interceptor.TransactionAttribute  java.lang.String  org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback  org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolder  org.springframework.transaction.TransactionStatus] - java.lang.Object - [org.springframework.transaction.interceptor.TransactionAspectSupport:prepareTransactionInfo  org.springframework.transaction.interceptor.TransactionAspectSupport:cleanupTransactionInfo  org.springframework.transaction.interceptor.TransactionAspectSupport:cleanupTransactionInfo  org.springframework.transaction.interceptor.TransactionAspectSupport:cleanupTransactionInfo],0
hashCode - [] - int - [java.lang.Object:hashCode],0
toString - [] - java.lang.String - [java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:getTransactionAttributeSource  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
lambda$null$2 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.util.Optional  java.lang.Throwable] - reactor.core.publisher.Mono - [java.util.Optional:orElse  reactor.core.publisher.Mono:then],0
getResource - [java.lang.Object] - java.lang.Object - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.Thread:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
processRollback - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:onErrorResume  reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:onErrorResume  reactor.core.publisher.Mono:then],0
doJtaResume - [org.springframework.transaction.jta.JtaTransactionObject  java.lang.Object] - void - [java.lang.StringBuilder:append  javax.transaction.InvalidTransactionException:getMessage  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.WebLogicJtaTransactionManager:getTransactionManager  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException],0
getName - [] - java.lang.String - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.util.UUID:toString],0
isActualTransactionActive - [] - boolean - [org.springframework.transaction.reactive.TransactionContext:isActualTransactionActive],0
lambda$processCommit$21 - [java.util.concurrent.atomic.AtomicBoolean  org.springframework.transaction.reactive.GenericReactiveTransaction  org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [java.util.concurrent.atomic.AtomicBoolean:set  org.springframework.transaction.reactive.GenericReactiveTransaction:isNewTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doCommit],0
scheduleWork - [javax.resource.spi.work.Work] - void - [org.springframework.jca.work.SimpleTaskWorkManager:scheduleWork  org.springframework.jca.work.SimpleTaskWorkManager:executeWork],0
values - [] - org.springframework.transaction.annotation.Isolation[] - [org.springframework.transaction.annotation.Isolation[]:clone],0
lambda$doExecute$1 - [javax.resource.cci.Record  javax.resource.cci.InteractionSpec  javax.resource.cci.Record  org.springframework.jca.cci.core.RecordExtractor  javax.resource.cci.Interaction  javax.resource.cci.ConnectionFactory] - java.lang.Object - [org.springframework.jca.cci.core.CciTemplate:getOutputRecordCreator  org.springframework.jca.cci.core.CciTemplate:getRecordFactory  org.springframework.jca.cci.core.CciTemplate:getOutputRecordCreator],0
getSavepointManager - [] - org.springframework.transaction.SavepointManager - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
lambda$doRollbackOnCommitException$32 - [java.lang.Throwable  org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
lambda$doRollbackOnCommitException$31 - [org.springframework.transaction.reactive.GenericReactiveTransaction  java.lang.Throwable  org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:isNewTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doRollback  org.springframework.transaction.reactive.GenericReactiveTransaction:hasTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doSetRollbackOnly],0
setBeanFactory - [org.springframework.beans.factory.BeanFactory] - void - [org.springframework.transaction.interceptor.TransactionInterceptor:setBeanFactory],0
doInTransaction - [org.springframework.transaction.TransactionStatus] - java.lang.Object - [org.springframework.transaction.support.TransactionCallbackWithoutResult:doInTransactionWithoutResult],0
findUserTransaction - [] - javax.transaction.UserTransaction - [org.springframework.transaction.jta.JtaTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
<init> - [] - void - [java.lang.Object:getClass  java.lang.Object:getClass  java.lang.Object:getClass],0
run - [] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isLocalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:isLocalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:isLocalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization],0
setCurrentTransactionReadOnly - [boolean] - void - [java.lang.ThreadLocal:set],0
lambda$processRollback$27 - [org.springframework.transaction.reactive.GenericReactiveTransaction  org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:isNewTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doRollback  org.springframework.transaction.reactive.GenericReactiveTransaction:hasTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doSetRollbackOnly],0
prepareTransactionInfo - [org.springframework.transaction.ReactiveTransactionManager  org.springframework.transaction.interceptor.TransactionAttribute  java.lang.String  org.springframework.transaction.ReactiveTransaction] - org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo - [java.lang.StringBuilder:append  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getJoinpointIdentification  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:newReactiveTransaction  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
<init> - [] - void - [org.springframework.transaction.jta.JtaTransactionManager:setNestedTransactionAllowed  org.springframework.transaction.jta.JtaTransactionManager:buildUserTransaction],0
hashCode - [] - int - [org.springframework.transaction.reactive.TransactionalOperatorImpl:getTransactionManager  java.lang.Object:hashCode],0
releaseHeldSavepoint - [] - void - [org.springframework.transaction.support.AbstractTransactionStatus:getSavepoint  org.springframework.transaction.support.AbstractTransactionStatus:getSavepointManager  org.springframework.transaction.support.AbstractTransactionStatus:setSavepoint],0
destroy - [] - void - [org.springframework.jca.endpoint.GenericMessageEndpointManager:stop],0
cleanupAfterCompletion - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:setCompleted  org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:isNewTransaction  org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.transaction.support.AbstractPlatformTransactionManager:doCleanupAfterCompletion  org.springframework.transaction.support.DefaultTransactionStatus:getSuspendedResources  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:hasTransaction  org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.transaction.support.DefaultTransactionStatus:getSuspendedResources  org.springframework.transaction.support.AbstractPlatformTransactionManager:resume],0
triggerAfterCommit - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:isNewSynchronization  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.TransactionSynchronizationManager:getSynchronizations],0
loadWebLogicTransactionClasses - [] - void - [java.lang.Object:getClass  java.lang.Class:getClassLoader  java.lang.ClassLoader:loadClass  org.springframework.transaction.jta.WebLogicJtaTransactionManager:getUserTransaction  java.lang.Class:isInstance  java.lang.Class:getMethod  java.lang.Class:getMethod  java.lang.Object:getClass  java.lang.Class:getClassLoader  java.lang.ClassLoader:loadClass  org.springframework.transaction.jta.WebLogicJtaTransactionManager:getTransactionManager  java.lang.Class:isInstance  java.lang.Object:getClass  java.lang.Class:getClassLoader  java.lang.ClassLoader:loadClass  java.lang.Class:getMethod  java.lang.Class:getMethod],0
lambda$rollbackOnException$9 - [java.lang.Throwable  java.lang.Throwable] - java.lang.Throwable - [org.springframework.transaction.TransactionSystemException:initApplicationException],0
releaseConnection - [javax.resource.cci.Connection] - void - [org.springframework.jca.cci.core.support.CciDaoSupport:getConnectionFactory],0
isSynchronizationActive - [] - boolean - [java.lang.ThreadLocal:get],0
readObject - [java.io.ObjectInputStream] - void - [java.io.ObjectInputStream:defaultReadObject  java.io.ObjectInputStream:readObject  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionManagerBeanName  java.io.ObjectInputStream:readObject  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionManager  java.io.ObjectInputStream:readObject  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionAttributeSource  java.io.ObjectInputStream:readObject  org.springframework.transaction.interceptor.TransactionInterceptor:setBeanFactory],0
invoke - [org.aopalliance.intercept.MethodInvocation] - java.lang.Object - [java.lang.Object:getClass  org.springframework.transaction.interceptor.TransactionInterceptor:invokeWithinTransaction],0
lambda$processRollback$28 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
lambda$null$13 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.util.List  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:cast],0
rollbackOnException - [org.springframework.transaction.ReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:onErrorMap],0
releaseSavepoint - [java.lang.Object] - void - [org.springframework.transaction.support.AbstractTransactionStatus:getSavepointManager],0
lambda$null$12 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.util.List  java.util.Optional] - org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder - [org.springframework.transaction.reactive.TransactionSynchronizationManager:getCurrentTransactionName  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionName  org.springframework.transaction.reactive.TransactionSynchronizationManager:isCurrentTransactionReadOnly  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionReadOnly  org.springframework.transaction.reactive.TransactionSynchronizationManager:getCurrentTransactionIsolationLevel  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionIsolationLevel  org.springframework.transaction.reactive.TransactionSynchronizationManager:isActualTransactionActive  org.springframework.transaction.reactive.TransactionSynchronizationManager:setActualTransactionActive  java.util.Optional:orElse],0
createAndHoldSavepoint - [] - void - [org.springframework.transaction.support.AbstractTransactionStatus:getSavepointManager  org.springframework.transaction.support.AbstractTransactionStatus:setSavepoint],0
doSetRollbackOnly - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction],0
lambda$invokeWithinTransaction$0 - [java.lang.reflect.Method  java.lang.reflect.Method] - org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport - [java.lang.reflect.Method:getDeclaringClass  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.reflect.Method:getReturnType  org.springframework.core.ReactiveAdapterRegistry:getAdapter  java.lang.StringBuilder:append  java.lang.reflect.Method:getReturnType  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
triggerBeforeCommit - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:isNewSynchronization  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.TransactionSynchronizationManager:getSynchronizations  org.springframework.transaction.reactive.GenericReactiveTransaction:isReadOnly],0
hashCode - [] - int - [org.springframework.jca.context.SpringContextResourceAdapter:getContextConfigLocation],0
resume - [] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.TransactionSynchronizationManager:bindResource],0
doSuspendSynchronization - [org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.TransactionSynchronizationManager:getSynchronizations  reactor.core.publisher.Flux:concatMap  reactor.core.publisher.Flux:then],0
initSynchronization - [] - void - [java.lang.ThreadLocal:set],0
registerAfterCompletionWithExistingTransaction - [java.lang.Object  java.util.List] - void - [org.springframework.transaction.support.AbstractPlatformTransactionManager:invokeAfterCompletion],0
getObjectType - [] - java.lang.Class - [java.lang.Object:getClass],0
lookupTransactionManager - [java.lang.String] - javax.transaction.TransactionManager - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.JtaTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
prepareSynchronization - [org.springframework.transaction.support.DefaultTransactionStatus  org.springframework.transaction.TransactionDefinition] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:hasTransaction],0
extractData - [javax.resource.cci.Record] - java.lang.Object - [org.springframework.jca.cci.object.MappingRecordOperation:extractOutputData],0
createEndpoint - [javax.transaction.xa.XAResource] - javax.resource.spi.endpoint.MessageEndpoint - [org.springframework.jca.endpoint.GenericMessageEndpointFactory:getMessageListener  org.springframework.aop.support.DelegatingIntroductionInterceptor:suppressInterface  org.springframework.aop.framework.ProxyFactory:addAdvice  org.springframework.aop.framework.ProxyFactory:getProxy],0
configureAutoProxyCreator - [org.w3c.dom.Element  org.springframework.beans.factory.xml.ParserContext] - void - [org.springframework.beans.factory.xml.ParserContext:getRegistry  org.springframework.beans.factory.xml.ParserContext:extractSource  org.springframework.beans.factory.support.RootBeanDefinition:setSource  org.springframework.beans.factory.support.RootBeanDefinition:setRole  org.springframework.beans.factory.xml.ParserContext:getReaderContext  org.springframework.beans.factory.xml.XmlReaderContext:registerWithGeneratedName  org.springframework.beans.factory.support.RootBeanDefinition:setSource  org.springframework.beans.factory.support.RootBeanDefinition:setRole  org.springframework.beans.factory.support.RootBeanDefinition:getPropertyValues  org.springframework.beans.MutablePropertyValues:add  org.springframework.beans.factory.xml.ParserContext:getReaderContext  org.springframework.beans.factory.xml.XmlReaderContext:registerWithGeneratedName  org.springframework.beans.factory.support.RootBeanDefinition:setSource  org.springframework.beans.factory.support.RootBeanDefinition:setRole  org.springframework.beans.factory.support.RootBeanDefinition:getPropertyValues  org.springframework.beans.MutablePropertyValues:add  org.springframework.beans.factory.support.RootBeanDefinition:getPropertyValues  org.springframework.beans.MutablePropertyValues:add  org.springframework.beans.factory.support.RootBeanDefinition:getPropertyValues  org.springframework.beans.MutablePropertyValues:add  org.springframework.beans.factory.xml.ParserContext:getRegistry  org.springframework.beans.factory.parsing.CompositeComponentDefinition:addNestedComponent  org.springframework.beans.factory.parsing.CompositeComponentDefinition:addNestedComponent  org.springframework.beans.factory.parsing.CompositeComponentDefinition:addNestedComponent  org.springframework.beans.factory.xml.ParserContext:registerComponent],0
doBegin - [java.lang.Object  org.springframework.transaction.TransactionDefinition] - void - [org.springframework.transaction.jta.JtaTransactionManager:doJtaBegin],0
bindToThread - [] - void - [java.lang.ThreadLocal:get  java.lang.ThreadLocal:set],0
clear - [] - void - [org.springframework.transaction.reactive.TransactionContext:clear],0
handleExistingTransaction - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:map  reactor.core.publisher.Mono:switchIfEmpty  reactor.core.publisher.Mono:cast  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  reactor.core.publisher.Mono:flatMap  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doBegin  reactor.core.publisher.Mono:doOnSuccess  reactor.core.publisher.Mono:thenReturn],0
hashCode - [] - int - [java.lang.Object:hashCode],0
isSynchronizationActive - [] - boolean - [org.springframework.transaction.reactive.TransactionContext:getSynchronizations],0
getMetaData - [] - javax.resource.cci.ResourceAdapterMetaData - [org.springframework.jca.cci.connection.DelegatingConnectionFactory:obtainTargetConnectionFactory],0
setCurrentTransactionIsolationLevel - [java.lang.Integer] - void - [java.lang.ThreadLocal:set],0
getConnection - [] - javax.resource.cci.Connection - [java.lang.ThreadLocal:get  org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter:doGetConnection  org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter:doGetConnection],0
lookupUowManager - [java.lang.String] - com.ibm.wsspi.uow.UOWManager - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.WebSphereUowTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
determineTransactionManager - [org.springframework.transaction.interceptor.TransactionAttribute] - org.springframework.transaction.TransactionManager - [org.springframework.transaction.interceptor.TransactionAspectSupport:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport:getTransactionManager],0
determineTransactionAspectClass - [] - java.lang.String - [java.lang.Object:getClass  java.lang.Class:getClassLoader],0
triggerBeforeCompletion - [java.util.Collection] - reactor.core.publisher.Mono - [reactor.core.publisher.Flux:concatMap  reactor.core.publisher.Flux:onErrorContinue  reactor.core.publisher.Flux:then],0
postProcessBeanFactory - [org.springframework.beans.factory.config.ConfigurableListableBeanFactory] - void - [java.lang.Object:getClass],0
lambda$completeTransactionAfterThrowing$12 - [java.lang.Throwable  java.lang.Throwable] - java.lang.Throwable - [org.springframework.transaction.TransactionSystemException:initApplicationException],0
completeTransactionAfterThrowing - [org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo  java.lang.Throwable] - reactor.core.publisher.Mono - [org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getReactiveTransaction  java.lang.StringBuilder:append  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getJoinpointIdentification  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getReactiveTransaction  reactor.core.publisher.Mono:onErrorMap  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getReactiveTransaction  reactor.core.publisher.Mono:onErrorMap],0
doResume - [java.lang.Object  java.lang.Object] - void - [org.springframework.transaction.jta.JtaTransactionManager:doJtaResume],0
toString - [] - java.lang.String - [org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:getAttributeDescription  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.transaction.interceptor.RollbackRuleAttribute:getExceptionName  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
triggerBeforeCommit - [java.util.Collection  boolean] - reactor.core.publisher.Mono - [reactor.core.publisher.Flux:concatMap  reactor.core.publisher.Flux:then],0
run - [] - void - [java.lang.Object:notify],0
objectResult - [java.util.Collection  java.lang.Class] - java.lang.Object - [java.lang.Class:isInstance  java.lang.Object:toString  java.lang.Class:isAssignableFrom  java.lang.Class:isInstance  java.lang.IllegalArgumentException:getMessage  java.lang.StringBuilder:append  java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
rollbackOn - [java.lang.Throwable] - boolean - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.RollbackRuleAttribute:getDepth  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
afterCompletion - [int] - void - [org.springframework.transaction.event.ApplicationListenerMethodTransactionalAdapter$TransactionSynchronizationEventAdapter:processEvent  org.springframework.transaction.event.ApplicationListenerMethodTransactionalAdapter$TransactionSynchronizationEventAdapter:processEvent  org.springframework.transaction.event.ApplicationListenerMethodTransactionalAdapter$TransactionSynchronizationEventAdapter:processEvent],0
test - [java.lang.Object] - boolean - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates$3:test],0
newReactiveTransaction - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean  boolean  java.lang.Object] - org.springframework.transaction.reactive.GenericReactiveTransaction - [org.springframework.transaction.reactive.TransactionSynchronizationManager:isSynchronizationActive],0
doSuspend - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.lang.Object] - reactor.core.publisher.Mono - [java.lang.StringBuilder:append  java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
setClassFilter - [org.springframework.aop.ClassFilter] - void - [org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:setClassFilter],0
bindResource - [java.lang.Object  java.lang.Object] - void - [org.springframework.transaction.reactive.TransactionContext:getResources  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.transaction.reactive.TransactionContext:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.transaction.reactive.TransactionContext:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
getDepth - [java.lang.Throwable] - int - [java.lang.Object:getClass  java.lang.Class:getName  java.lang.String:contains  java.lang.Class:getSuperclass],0
<init> - [javax.resource.cci.ConnectionFactory  javax.resource.cci.InteractionSpec] - void - [org.springframework.jca.cci.object.SimpleRecordOperation:getCciTemplate  org.springframework.jca.cci.core.CciTemplate:setConnectionFactory  org.springframework.jca.cci.object.SimpleRecordOperation:setInteractionSpec],0
doGetTransaction - [] - java.lang.Object - [org.springframework.transaction.jta.JtaTransactionManager:getUserTransaction  org.springframework.transaction.jta.JtaTransactionManager:lookupUserTransaction  org.springframework.transaction.jta.JtaTransactionManager:doGetJtaTransaction],2
lambda$doSuspendSynchronization$17 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.util.List] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.TransactionSynchronizationManager:clearSynchronization],0
afterPropertiesSet - [] - void - [org.springframework.transaction.jta.JtaTransactionManager:initUserTransactionAndTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:checkUserTransactionAndTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:initTransactionSynchronizationRegistry],0
<clinit> - [] - void - [java.lang.Class:getClassLoader],0
intResult - [java.util.Collection] - int - [java.lang.Number:intValue],0
afterPropertiesSet - [] - void - [org.springframework.jca.cci.core.CciTemplate:afterPropertiesSet],0
doRegisterAfterCompletionWithJtaTransaction - [org.springframework.transaction.jta.JtaTransactionObject  java.util.List] - void - [org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  org.springframework.transaction.jta.JtaTransactionManager:getTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:getTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:invokeAfterCompletion],0
unbindResource - [java.lang.Object] - java.lang.Object - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.Thread:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
afterPropertiesSet - [] - void - [org.springframework.jca.cci.connection.CciLocalTransactionManager:getConnectionFactory],0
commitTransaction - [org.springframework.transaction.TransactionStatus] - void - [org.springframework.jdbc.datasource.DataSourceTransactionManager:commit],5
afterPropertiesSet - [] - void - [org.springframework.jca.cci.connection.DelegatingConnectionFactory:getTargetConnectionFactory],0
getObject - [] - java.lang.Object - [org.springframework.transaction.config.JtaTransactionManagerFactoryBean:getObject],0
write - [java.io.OutputStream] - void - [java.io.OutputStream:write  java.io.OutputStream:flush],0
loadBeanDefinitions - [org.springframework.beans.factory.support.BeanDefinitionRegistry  java.lang.String[]] - void - [org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions],0
releaseResource - [org.springframework.jca.cci.connection.ConnectionHolder  javax.resource.cci.ConnectionFactory] - void - [org.springframework.jca.cci.connection.ConnectionHolder:getConnection  org.springframework.jca.cci.connection.ConnectionFactoryUtils$ConnectionSynchronization:releaseResource],0
setTransactionAttributes - [java.util.Properties] - void - [org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource:setProperties],0
doCommit - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:getConnectionHolder  org.springframework.jca.cci.connection.ConnectionHolder:getConnection  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
onApplicationEvent - [org.springframework.context.ApplicationEvent] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.event.ApplicationListenerMethodTransactionalAdapter:processEvent  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
selectImports - [org.springframework.context.annotation.AdviceMode] - java.lang.String[] - [org.springframework.context.annotation.AdviceMode:ordinal  java.lang.Class:getName  java.lang.Class:getName],0
<init> - [] - void - [java.lang.Object:getClass],0
<init> - [int] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
transactionAdvisor - [org.springframework.transaction.interceptor.TransactionAttributeSource  org.springframework.transaction.interceptor.TransactionInterceptor] - org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor - [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor:setTransactionAttributeSource  org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor:setAdvice  org.springframework.core.annotation.AnnotationAttributes:getNumber  java.lang.Integer:intValue  org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor:setOrder],0
lambda$processCommit$22 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  java.util.concurrent.atomic.AtomicBoolean  java.lang.Throwable] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates:test  reactor.core.publisher.Mono:then  org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates:test  reactor.core.publisher.Mono:then  org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates:test  java.util.concurrent.atomic.AtomicBoolean:get  reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:then],0
isExistingTransaction - [java.lang.Object] - boolean - [org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction],0
determineTimeout - [org.springframework.transaction.TransactionDefinition] - int - [org.springframework.transaction.support.AbstractPlatformTransactionManager:getDefaultTimeout],0
createEndpoint - [javax.transaction.xa.XAResource] - javax.resource.spi.endpoint.MessageEndpoint - [org.springframework.jca.endpoint.AbstractMessageEndpointFactory:createEndpointInternal  org.springframework.jca.endpoint.AbstractMessageEndpointFactory$AbstractMessageEndpoint:initXAResource  org.springframework.jca.endpoint.AbstractMessageEndpointFactory:createEndpointInternal  org.springframework.jca.endpoint.AbstractMessageEndpointFactory$AbstractMessageEndpoint:initXAResource],0
lambda$null$18 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.TransactionSynchronization  java.lang.Void] - void - [org.springframework.transaction.reactive.TransactionSynchronizationManager:registerSynchronization],0
writeObject - [java.io.ObjectOutputStream] - void - [java.io.ObjectOutputStream:defaultWriteObject  org.springframework.transaction.interceptor.TransactionInterceptor:getTransactionManagerBeanName  java.io.ObjectOutputStream:writeObject  org.springframework.transaction.interceptor.TransactionInterceptor:getTransactionManager  java.io.ObjectOutputStream:writeObject  org.springframework.transaction.interceptor.TransactionInterceptor:getTransactionAttributeSource  java.io.ObjectOutputStream:writeObject  org.springframework.transaction.interceptor.TransactionInterceptor:getBeanFactory  java.io.ObjectOutputStream:writeObject],0
setTransactionManager - [java.lang.Object] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
hashCode - [] - int - [java.lang.Object:hashCode],0
invoke - [org.aopalliance.intercept.MethodInvocation] - java.lang.Object - [java.lang.Object:getClass  org.springframework.dao.support.PersistenceExceptionTranslationInterceptor:detectPersistenceExceptionTranslators],0
doInTransaction - [org.springframework.transaction.ReactiveTransaction] - org.reactivestreams.Publisher - [org.springframework.transaction.reactive.TransactionalOperatorExtensionsKt$executeAndAwait$2:doInTransaction],0
doSuspend - [java.lang.Object] - java.lang.Object - [org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:setConnectionHolder],0
afterDelivery - [] - void - [java.lang.Thread:setContextClassLoader  org.springframework.jca.endpoint.AbstractMessageEndpointFactory$TransactionDelegate:endTransaction],0
postProcessProxyFactory - [org.springframework.aop.framework.ProxyFactory] - void - [org.springframework.aop.framework.ProxyFactory:addInterface],0
readObject - [java.io.ObjectInputStream] - void - [java.io.ObjectInputStream:defaultReadObject  java.lang.Object:getClass],0
setClassFilter - [org.springframework.aop.ClassFilter] - void - [org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:setClassFilter],0
getTransaction - [org.springframework.transaction.TransactionDefinition] - org.springframework.transaction.TransactionStatus - [org.springframework.transaction.support.AbstractPlatformTransactionManager:doGetTransaction  org.springframework.transaction.support.AbstractPlatformTransactionManager:isExistingTransaction  org.springframework.transaction.support.AbstractPlatformTransactionManager:suspend  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.support.AbstractPlatformTransactionManager:resume  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.support.AbstractPlatformTransactionManager:getTransactionSynchronization  org.springframework.transaction.support.AbstractPlatformTransactionManager:prepareTransactionStatus],0
getConnection - [] - javax.resource.cci.Connection - [org.springframework.jca.cci.connection.DelegatingConnectionFactory:obtainTargetConnectionFactory  org.springframework.jca.cci.connection.DelegatingConnectionFactory:obtainTargetConnectionFactory],0
lambda$afterCompletion$0 - [int] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.ReactiveResourceSynchronization:shouldUnbindAtCompletion  org.springframework.transaction.reactive.TransactionSynchronizationManager:unbindResourceIfPossible  org.springframework.transaction.reactive.ReactiveResourceSynchronization:shouldReleaseAfterCompletion  org.springframework.transaction.reactive.ReactiveResourceSynchronization:releaseResource  org.springframework.transaction.reactive.ReactiveResourceSynchronization:cleanupResource],0
execute - [org.springframework.transaction.reactive.TransactionCallback] - reactor.core.publisher.Flux - [reactor.core.publisher.Mono:flatMapMany  reactor.core.publisher.Flux:subscriberContext  reactor.core.publisher.Flux:subscriberContext],0
isNewTransaction - [] - boolean - [org.springframework.transaction.support.DefaultTransactionStatus:hasTransaction],0
lambda$doResumeSynchronization$19 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.TransactionSynchronization] - org.reactivestreams.Publisher - [reactor.core.publisher.Mono:doOnSuccess],0
doSuspend - [java.lang.Object] - java.lang.Object - [org.springframework.transaction.jta.JtaTransactionManager:doJtaSuspend],0
triggerAfterCompletion - [org.springframework.transaction.support.DefaultTransactionStatus  int] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:hasTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isNewTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.AbstractPlatformTransactionManager:invokeAfterCompletion  org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.transaction.support.AbstractPlatformTransactionManager:registerAfterCompletionWithExistingTransaction],0
doResumeSynchronization - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.util.List] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.TransactionSynchronizationManager:initSynchronization  reactor.core.publisher.Flux:concatMap  reactor.core.publisher.Flux:then],0
access$100 - [org.springframework.transaction.jta.WebSphereUowTransactionManager  org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean  boolean  boolean  java.lang.Object] - org.springframework.transaction.support.DefaultTransactionStatus - [org.springframework.transaction.jta.WebSphereUowTransactionManager:prepareTransactionStatus],0
toString - [] - java.lang.String - [java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
beforeCompletion - [] - void - [org.springframework.transaction.support.ResourceHolderSynchronization:shouldUnbindAtCompletion  org.springframework.transaction.support.ResourceHolderSynchronization:shouldReleaseBeforeCompletion  org.springframework.transaction.support.ResourceHolderSynchronization:releaseResource],0
toString - [] - java.lang.String - [java.lang.Object:toString],0
setAsText - [java.lang.String] - void - [org.springframework.beans.propertyeditors.PropertiesEditor:setAsText  org.springframework.beans.propertyeditors.PropertiesEditor:getValue  java.util.Properties:propertyNames  java.util.Properties:getProperty  org.springframework.transaction.interceptor.TransactionAttributeEditor:setAsText  org.springframework.transaction.interceptor.TransactionAttributeEditor:getValue  org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource:addTransactionalMethod  org.springframework.transaction.interceptor.TransactionAttributeSourceEditor:setValue],0
setConnectionFactory - [javax.resource.cci.ConnectionFactory] - void - [org.springframework.jca.cci.core.CciTemplate:getConnectionFactory  org.springframework.jca.cci.core.support.CciDaoSupport:createCciTemplate],0
invoke - [java.lang.Object  java.lang.reflect.Method  java.lang.Object[]] - java.lang.Object - [java.lang.reflect.Method:getName  java.lang.String:equals  java.lang.reflect.Method:getName  java.lang.String:equals  java.lang.reflect.Method:getName  java.lang.String:equals  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException],0
doCleanupAfterCompletion - [java.lang.Object] - void - [org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction],0
getCciTemplate - [javax.resource.cci.ConnectionSpec] - org.springframework.jca.cci.core.CciTemplate - [org.springframework.jca.cci.core.support.CciDaoSupport:getCciTemplate  org.springframework.jca.cci.core.CciTemplate:getDerivedTemplate],0
setOutputRecordCreator - [org.springframework.jca.cci.core.RecordCreator] - void - [org.springframework.jca.cci.object.MappingRecordOperation:getCciTemplate  org.springframework.jca.cci.core.CciTemplate:setOutputRecordCreator],0
resetConnection - [] - void - [org.springframework.jca.cci.connection.SingleConnectionFactory:closeConnection],0
start - [] - void - [org.springframework.jca.endpoint.GenericMessageEndpointManager:getResourceAdapter  org.springframework.jca.endpoint.GenericMessageEndpointManager:getMessageEndpointFactory  org.springframework.jca.endpoint.GenericMessageEndpointManager:getActivationSpec],0
doJtaResume - [org.springframework.transaction.jta.JtaTransactionObject  java.lang.Object] - void - [org.springframework.transaction.jta.JtaTransactionManager:getTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:getTransactionManager],0
afterPropertiesSet - [] - void - [org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource:initMethodMap],0
<init> - [] - void - [org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:setClassFilter],0
invokeAfterCompletion - [java.util.Collection  int] - reactor.core.publisher.Mono - [reactor.core.publisher.Flux:concatMap  reactor.core.publisher.Flux:onErrorContinue  reactor.core.publisher.Flux:then],0
getCurrentTransactionIsolationLevel - [] - java.lang.Integer - [org.springframework.transaction.reactive.TransactionContext:getCurrentTransactionIsolationLevel],0
isConnectionTransactional - [javax.resource.cci.Connection  javax.resource.cci.ConnectionFactory] - boolean - [org.springframework.jca.cci.connection.ConnectionHolder:getConnection],0
setPropagationBehaviorName - [java.lang.String] - void - [java.lang.String:startsWith  org.springframework.core.Constants:asNumber  java.lang.Number:intValue  org.springframework.transaction.support.DefaultTransactionDefinition:setPropagationBehavior],0
afterCommit - [] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.ReactiveResourceSynchronization:shouldReleaseBeforeCompletion  org.springframework.transaction.reactive.ReactiveResourceSynchronization:processResourceAfterCommit],0
currentContext - [] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:handle],0
initConnection - [] - void - [org.springframework.jca.cci.connection.SingleConnectionFactory:getTargetConnectionFactory  org.springframework.jca.cci.connection.SingleConnectionFactory:closeConnection  org.springframework.jca.cci.connection.SingleConnectionFactory:doCreateConnection  org.springframework.jca.cci.connection.SingleConnectionFactory:prepareConnection  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.jca.cci.connection.SingleConnectionFactory:getCloseSuppressingConnectionProxy],0
toString - [] - java.lang.String - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
toString - [] - java.lang.String - [org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolderException:getCause  java.lang.Throwable:toString],0
registerAfterCompletionWithExistingTransaction - [java.lang.Object  java.util.List] - void - [org.springframework.transaction.jta.JtaTransactionManager:doRegisterAfterCompletionWithJtaTransaction  java.lang.Exception:getCause  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.JtaTransactionManager:invokeAfterCompletion  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.JtaTransactionManager:invokeAfterCompletion],0
<init> - [] - void - [java.lang.Object:getClass],0
createMainInterceptor - [] - java.lang.Object - [org.springframework.transaction.interceptor.TransactionInterceptor:afterPropertiesSet],0
doUnbindResource - [java.lang.Object] - java.lang.Object - [java.lang.ThreadLocal:get  java.lang.ThreadLocal:remove  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.Thread:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
methodIdentification - [java.lang.reflect.Method  java.lang.Class  org.springframework.transaction.interceptor.TransactionAttribute] - java.lang.String - [org.springframework.transaction.interceptor.TransactionAspectSupport:methodIdentification  org.springframework.transaction.interceptor.DefaultTransactionAttribute:getDescriptor],0
resumeAfterBeginException - [java.lang.Object  org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder  java.lang.Throwable] - void - [org.springframework.transaction.support.AbstractPlatformTransactionManager:resume],0
test - [java.lang.Object] - boolean - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates:test],0
createRecord - [javax.resource.cci.RecordFactory] - javax.resource.cci.Record - [org.springframework.jca.cci.object.MappingRecordOperation:createInputRecord],0
readObject - [java.io.ObjectInputStream] - void - [java.io.ObjectInputStream:defaultReadObject  org.springframework.transaction.jta.JtaTransactionManager:initUserTransactionAndTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:initTransactionSynchronizationRegistry],0
afterPropertiesSet - [] - void - [org.springframework.jca.cci.connection.SingleConnectionFactory:getTargetConnectionFactory],0
extractData - [javax.resource.cci.Record] - java.lang.Object - [org.springframework.jca.cci.core.CciTemplate$SimpleRecordExtractor:extractData],0
adaptExceptionIfNecessary - [org.aopalliance.intercept.MethodInvocation  javax.resource.ResourceException] - java.lang.Exception - [java.lang.Object:getClass],0
lambda$processCommit$25 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
execute - [javax.resource.cci.Record] - javax.resource.cci.Record - [org.springframework.jca.cci.object.SimpleRecordOperation:getInteractionSpec  org.springframework.jca.cci.object.SimpleRecordOperation:getCciTemplate  org.springframework.jca.cci.core.CciTemplate:execute  org.springframework.jca.cci.object.SimpleRecordOperation:getInteractionSpec  org.springframework.jca.cci.object.SimpleRecordOperation:getCciTemplate  org.springframework.jca.cci.core.CciTemplate:execute],0
obtainTransactionManager - [] - javax.transaction.TransactionManager - [org.springframework.transaction.jta.WebLogicJtaTransactionManager:getTransactionManager],0
lambda$invokeWithinTransaction$9 - [org.springframework.transaction.ReactiveTransactionManager  org.springframework.transaction.interceptor.TransactionAttribute  java.lang.String  org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback  org.springframework.transaction.reactive.TransactionContext] - org.reactivestreams.Publisher - [reactor.core.publisher.Mono:flatMapMany],0
prepareTransactionStatus - [org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean  boolean  boolean  java.lang.Object] - org.springframework.transaction.support.DefaultTransactionStatus - [org.springframework.transaction.support.AbstractPlatformTransactionManager:newTransactionStatus  org.springframework.transaction.support.AbstractPlatformTransactionManager:prepareSynchronization],0
afterPropertiesSet - [] - void - [org.springframework.transaction.interceptor.TransactionAspectSupport:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport:getTransactionAttributeSource],0
<init> - [] - void - [java.lang.Object:getClass  java.lang.Object:getClass  org.springframework.jca.cci.core.CciTemplate:setConnectionFactory  org.springframework.jca.cci.core.CciTemplate:afterPropertiesSet  java.lang.Object:getClass  org.springframework.jca.cci.core.CciTemplate:setConnectionFactory  org.springframework.jca.cci.core.CciTemplate:setConnectionSpec  org.springframework.jca.cci.core.CciTemplate:afterPropertiesSet],0
getReference - [] - javax.naming.Reference - [org.springframework.jca.cci.connection.DelegatingConnectionFactory:obtainTargetConnectionFactory],0
clear - [] - void - [java.lang.ThreadLocal:remove  java.lang.ThreadLocal:remove  java.lang.ThreadLocal:remove  java.lang.ThreadLocal:remove  java.lang.ThreadLocal:remove],0
doGetTransaction - [] - java.lang.Object - [org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:setConnectionHolder],2
processEvent - [] - void - [org.springframework.context.event.ApplicationListenerMethodAdapter:processEvent],0
getDefinitionDescription - [] - java.lang.StringBuilder - [org.springframework.core.Constants:toCode  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.core.Constants:toCode  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append],0
setTransactionManager - [org.springframework.transaction.PlatformTransactionManager] - void - [org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionManager],0
lambda$null$3 - [reactor.core.publisher.Mono  org.springframework.transaction.ReactiveTransaction] - reactor.core.publisher.Mono - [java.lang.Object:getClass  java.lang.Object:getClass  reactor.core.publisher.Mono:onErrorResume],0
initSynchronization - [] - void - [org.springframework.transaction.reactive.TransactionSynchronizationManager:isSynchronizationActive  org.springframework.transaction.reactive.TransactionContext:setSynchronizations],0
doCommit - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction],0
submit - [java.lang.Runnable] - java.util.concurrent.Future - [org.springframework.jca.work.WorkManagerTaskExecutor:execute  org.springframework.jca.work.WorkManagerTaskExecutor:execute],0
getConnection - [] - javax.resource.cci.Connection - [org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy:obtainTargetConnectionFactory  org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy:getTransactionAwareConnectionProxy],0
values - [] - org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates[] - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates[]:clone],0
matches - [java.lang.Class] - boolean - [java.lang.Class:isAssignableFrom  java.lang.Class:isAssignableFrom  java.lang.Class:isAssignableFrom  org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:getTransactionAttributeSource],0
lambda$null$7 - [org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo  java.lang.Throwable] - org.reactivestreams.Publisher - [reactor.core.publisher.Mono:then],0
getTransactionAttribute - [java.lang.reflect.Method  java.lang.Class] - org.springframework.transaction.interceptor.TransactionAttribute - [java.lang.reflect.Method:getDeclaringClass  org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource:getCacheKey  org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource:computeTransactionAttribute  org.springframework.transaction.interceptor.DefaultTransactionAttribute:setDescriptor  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
startWork - [javax.resource.spi.work.Work] - long - [org.springframework.jca.work.SimpleTaskWorkManager:startWork  org.springframework.jca.work.SimpleTaskWorkManager:executeWork],0
hashCode - [] - int - [java.lang.Object:hashCode],0
setReference - [javax.naming.Reference] - void - [org.springframework.jca.cci.connection.DelegatingConnectionFactory:obtainTargetConnectionFactory],0
<init> - [javax.resource.spi.work.WorkManager] - void - [org.springframework.jca.work.WorkManagerTaskExecutor:setWorkManager],0
initApplicationException - [java.lang.Throwable] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
commit - [org.springframework.transaction.TransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isLocalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.AbstractPlatformTransactionManager:shouldCommitOnGlobalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isGlobalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isDebug],0
<init> - [] - void - [java.lang.Object:getClass],0
getDerivedTemplate - [javax.resource.cci.ConnectionSpec] - org.springframework.jca.cci.core.CciTemplate - [org.springframework.jca.cci.core.CciTemplate:getOutputRecordCreator  org.springframework.jca.cci.core.CciTemplate:setOutputRecordCreator],0
afterPropertiesSet - [] - void - [org.springframework.jca.cci.core.CciTemplate:getConnectionFactory],0
<init> - [] - void - [java.lang.Object:getClass],0
rollbackOnException - [org.springframework.transaction.TransactionStatus  java.lang.Throwable] - void - [org.springframework.transaction.TransactionSystemException:initApplicationException],0
lambda$null$9 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  java.lang.Object  org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
isRollbackOnly - [] - boolean - [org.springframework.transaction.support.AbstractTransactionStatus:isLocalRollbackOnly  org.springframework.transaction.support.AbstractTransactionStatus:isGlobalRollbackOnly],0
setImportMetadata - [org.springframework.core.type.AnnotationMetadata] - void - [java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
removeConnectionSpecFromCurrentThread - [] - void - [java.lang.ThreadLocal:remove],0
<clinit> - [] - void - [java.lang.Class:getClassLoader],0
completeTransactionAfterThrowing - [org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo  java.lang.Throwable] - void - [org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionStatus  java.lang.StringBuilder:append  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getJoinpointIdentification  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionStatus  org.springframework.transaction.TransactionSystemException:initApplicationException  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionStatus  org.springframework.transaction.TransactionSystemException:initApplicationException],0
afterPropertiesSet - [] - void - [org.springframework.dao.support.DaoSupport:checkDaoConfig  org.springframework.dao.support.DaoSupport:initDao],0
getEndpointClassLoader - [] - java.lang.ClassLoader - [org.springframework.jca.endpoint.GenericMessageEndpointFactory:getMessageListener  java.lang.Object:getClass  java.lang.Class:getClassLoader],0
doRollback - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
lambda$handleExistingTransaction$10 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean  org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doBegin  reactor.core.publisher.Mono:doOnSuccess  reactor.core.publisher.Mono:thenReturn  reactor.core.publisher.Mono:onErrorResume],0
shouldReleaseAfterCompletion - [java.lang.Object] - boolean - [org.springframework.transaction.reactive.ReactiveResourceSynchronization:shouldReleaseBeforeCompletion],0
setTransactionSynchronizationName - [java.lang.String] - void - [org.springframework.core.Constants:asNumber  java.lang.Number:intValue  org.springframework.transaction.support.AbstractPlatformTransactionManager:setTransactionSynchronization],0
parseTransactionAnnotation - [java.lang.reflect.AnnotatedElement] - org.springframework.transaction.interceptor.TransactionAttribute - [org.springframework.transaction.annotation.SpringTransactionAnnotationParser:parseTransactionAnnotation  org.springframework.transaction.annotation.SpringTransactionAnnotationParser:parseTransactionAnnotation  org.springframework.core.annotation.AnnotationAttributes:getEnum  org.springframework.transaction.annotation.Propagation:value  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setPropagationBehavior  org.springframework.core.annotation.AnnotationAttributes:getEnum  org.springframework.transaction.annotation.Isolation:value  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setIsolationLevel  org.springframework.core.annotation.AnnotationAttributes:getNumber  java.lang.Number:intValue  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setTimeout  org.springframework.core.annotation.AnnotationAttributes:getBoolean  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setReadOnly  org.springframework.core.annotation.AnnotationAttributes:getString  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setQualifier  org.springframework.core.annotation.AnnotationAttributes:getClassArray  org.springframework.core.annotation.AnnotationAttributes:getStringArray  org.springframework.core.annotation.AnnotationAttributes:getClassArray  org.springframework.core.annotation.AnnotationAttributes:getStringArray  org.springframework.transaction.interceptor.RuleBasedTransactionAttribute:setRollbackRules],0
commitTransactionAfterReturning - [org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo] - reactor.core.publisher.Mono - [org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getReactiveTransaction  java.lang.StringBuilder:append  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getJoinpointIdentification  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo:getReactiveTransaction],0
lambda$getReactiveTransaction$5 - [org.springframework.transaction.TransactionDefinition  org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager:doGetTransaction  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:isExistingTransaction  reactor.core.publisher.Mono:map  reactor.core.publisher.Mono:flatMap  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
<init> - [] - void - [java.lang.Class:getClassLoader  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
doJtaBegin - [org.springframework.transaction.jta.JtaTransactionObject  org.springframework.transaction.TransactionDefinition] - void - [org.springframework.transaction.jta.WebLogicJtaTransactionManager:determineTimeout  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  java.lang.reflect.Method:invoke  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException  org.springframework.transaction.jta.WebLogicJtaTransactionManager:applyTimeout  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException  org.springframework.transaction.jta.WebLogicJtaTransactionManager:applyIsolationLevel],0
initUserTransactionAndTransactionManager - [] - void - [org.springframework.transaction.jta.JtaTransactionManager:lookupUserTransaction  org.springframework.transaction.jta.JtaTransactionManager:retrieveUserTransaction  org.springframework.transaction.jta.JtaTransactionManager:findUserTransaction  org.springframework.transaction.jta.JtaTransactionManager:lookupTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:retrieveTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:findTransactionManager  org.springframework.transaction.jta.JtaTransactionManager:buildUserTransaction],0
rollbackTransaction - [org.springframework.transaction.TransactionStatus] - void - [org.springframework.jdbc.datasource.DataSourceTransactionManager:rollback],4
startTransaction - [org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean  org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder] - org.springframework.transaction.TransactionStatus - [org.springframework.transaction.support.AbstractPlatformTransactionManager:getTransactionSynchronization  org.springframework.transaction.support.AbstractPlatformTransactionManager:newTransactionStatus  org.springframework.transaction.support.AbstractPlatformTransactionManager:doBegin  org.springframework.transaction.support.AbstractPlatformTransactionManager:prepareSynchronization],0
<init> - [] - void - [java.lang.Object:getClass],0
createSavepoint - [] - java.lang.Object - [org.springframework.transaction.support.AbstractTransactionStatus:getSavepointManager],0
addTransactionalMethod - [java.lang.String  org.springframework.transaction.interceptor.TransactionAttribute] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
obtainConnectionFactory - [] - javax.resource.cci.ConnectionFactory - [org.springframework.jca.cci.core.CciTemplate:getConnectionFactory],0
lambda$processRollback$30 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
matches - [java.lang.reflect.Method  java.lang.Class] - boolean - [org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut:getTransactionAttributeSource],0
getConnection - [] - javax.resource.cci.Connection - [org.springframework.jca.cci.connection.SingleConnectionFactory:initConnection],0
<init> - [] - void - [java.lang.Object:getClass],0
beforeCommit - [boolean] - void - [org.springframework.transaction.event.ApplicationListenerMethodTransactionalAdapter$TransactionSynchronizationEventAdapter:processEvent],0
createMappedRecord - [java.lang.String] - javax.resource.cci.MappedRecord - [org.springframework.jca.cci.core.CciTemplate:getRecordFactory],0
lambda$null$4 - [boolean  org.springframework.transaction.TransactionDefinition  java.lang.Object  org.springframework.transaction.reactive.TransactionSynchronizationManager] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:map  reactor.core.publisher.Mono:defaultIfEmpty  reactor.core.publisher.Mono:flatMap],0
transactional - [reactor.core.publisher.Mono] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:flatMap  reactor.core.publisher.Mono:subscriberContext  reactor.core.publisher.Mono:subscriberContext],0
suspend - [java.lang.Object] - org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder - [org.springframework.transaction.support.AbstractPlatformTransactionManager:doSuspend  org.springframework.transaction.support.AbstractPlatformTransactionManager:doSuspend],0
release - [] - void - [org.springframework.jca.endpoint.AbstractMessageEndpointFactory$TransactionDelegate:setRollbackOnly  org.springframework.jca.endpoint.AbstractMessageEndpointFactory$TransactionDelegate:endTransaction],0
beginTransaction - [] - org.springframework.transaction.TransactionStatus - [org.springframework.transaction.support.DataSourceTransactionManager:getTransaction],1
checkTransactionTimeout - [boolean] - void - [org.springframework.transaction.support.ResourceHolderSupport:setRollbackOnly  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
processCommit - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.AbstractReactiveTransactionManager:prepareForCommit  reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:onErrorResume  reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:then  reactor.core.publisher.Mono:onErrorResume  reactor.core.publisher.Mono:then],0
getConnection - [] - javax.resource.cci.Connection - [org.springframework.jca.cci.core.support.CciDaoSupport:getConnectionFactory],0
hashCode - [] - int - [java.lang.String:hashCode],0
submitListenable - [java.lang.Runnable] - org.springframework.util.concurrent.ListenableFuture - [org.springframework.jca.work.WorkManagerTaskExecutor:execute  org.springframework.jca.work.WorkManagerTaskExecutor:execute],0
getTimeToLiveInMillis - [] - long - [java.util.Date:getTime],0
afterPropertiesSet - [] - void - [org.springframework.jca.work.WorkManagerTaskExecutor:lookup  org.springframework.jca.work.WorkManagerTaskExecutor:getDefaultWorkManager],0
hashCode - [] - int - [java.lang.Object:hashCode],0
shouldReleaseAfterCompletion - [org.springframework.transaction.support.ResourceHolder] - boolean - [org.springframework.transaction.support.ResourceHolderSynchronization:shouldReleaseBeforeCompletion],0
registerJtaTransactionAspect - [org.w3c.dom.Element  org.springframework.beans.factory.xml.ParserContext] - void - [org.springframework.beans.factory.xml.ParserContext:getRegistry  org.springframework.beans.factory.support.RootBeanDefinition:setBeanClassName  org.springframework.beans.factory.support.RootBeanDefinition:setFactoryMethodName  org.springframework.beans.factory.xml.ParserContext:registerBeanComponent],0
lambda$null$6 - [org.springframework.transaction.ReactiveTransaction  java.lang.Throwable] - org.reactivestreams.Publisher - [reactor.core.publisher.Mono:then],0
<clinit> - [] - void - [org.springframework.context.annotation.AdviceMode:ordinal  org.springframework.context.annotation.AdviceMode:ordinal],0
<init> - [] - void - [java.lang.Object:getClass],0
isCurrentTransactionReadOnly - [] - boolean - [org.springframework.transaction.reactive.TransactionContext:isCurrentTransactionReadOnly],0
setTransactionAttributeSource - [org.springframework.transaction.interceptor.TransactionAttributeSource] - void - [org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionAttributeSource],0
getTimeToLiveInSeconds - [] - int - [org.springframework.transaction.support.ResourceHolderSupport:getTimeToLiveInMillis],0
beforeCompletion - [] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.ReactiveResourceSynchronization:shouldUnbindAtCompletion  org.springframework.transaction.reactive.TransactionSynchronizationManager:unbindResource  org.springframework.transaction.reactive.ReactiveResourceSynchronization:shouldReleaseBeforeCompletion  org.springframework.transaction.reactive.ReactiveResourceSynchronization:releaseResource],0
setTimeoutInSeconds - [int] - void - [org.springframework.transaction.support.ResourceHolderSupport:setTimeoutInMillis],0
getObject - [] - java.lang.Object - [org.springframework.jca.support.ResourceAdapterFactoryBean:getObject],0
lambda$invokeWithinTransaction$4 - [org.springframework.transaction.ReactiveTransactionManager  org.springframework.transaction.interceptor.TransactionAttribute  java.lang.String  org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback  org.springframework.transaction.reactive.TransactionContext] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:flatMap],0
lambda$transactional$4 - [reactor.core.publisher.Mono  org.springframework.transaction.reactive.TransactionContext] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:flatMap],0
lookupUserTransaction - [java.lang.String] - javax.transaction.UserTransaction - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.jta.JtaTransactionManager:getJndiTemplate  org.springframework.jndi.JndiTemplate:lookup  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
invokeWithinTransaction - [java.lang.reflect.Method  java.lang.Class  org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback] - java.lang.Object - [org.springframework.transaction.interceptor.TransactionAspectSupport:getTransactionAttributeSource  org.springframework.transaction.interceptor.TransactionAspectSupport:determineTransactionManager  org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport:invokeWithinTransaction  org.springframework.transaction.interceptor.TransactionAspectSupport:createTransactionIfNecessary  org.springframework.transaction.interceptor.TransactionAspectSupport:cleanupTransactionInfo  org.springframework.transaction.interceptor.TransactionAspectSupport:completeTransactionAfterThrowing  org.springframework.transaction.interceptor.TransactionAspectSupport:cleanupTransactionInfo  org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo:getTransactionStatus  org.springframework.transaction.interceptor.TransactionAspectSupport:commitTransactionAfterReturning  org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolderException:getCause  org.springframework.transaction.TransactionSystemException:initApplicationException],0
lambda$null$3 - [boolean  org.springframework.transaction.TransactionDefinition  org.springframework.transaction.reactive.TransactionSynchronizationManager  java.lang.Object  java.util.Optional] - reactor.core.publisher.Mono - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  reactor.core.publisher.Mono:onErrorResume],0
failService - [com.springtx.transaction.TransactionManager:rollbackTransaction  org.slf4j.Logger:info],3
registerTransactionAspect - [org.w3c.dom.Element  org.springframework.beans.factory.xml.ParserContext] - void - [org.springframework.beans.factory.xml.ParserContext:getRegistry  org.springframework.beans.factory.support.RootBeanDefinition:setBeanClassName  org.springframework.beans.factory.support.RootBeanDefinition:setFactoryMethodName  org.springframework.beans.factory.xml.ParserContext:registerBeanComponent],0
<init> - [javax.resource.cci.ConnectionFactory  javax.resource.cci.InteractionSpec] - void - [org.springframework.jca.cci.object.MappingRecordOperation:getCciTemplate  org.springframework.jca.cci.core.CciTemplate:setConnectionFactory  org.springframework.jca.cci.object.MappingRecordOperation:setInteractionSpec],0
triggerAfterCompletion - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  int] - reactor.core.publisher.Mono - [org.springframework.transaction.reactive.GenericReactiveTransaction:isNewSynchronization  org.springframework.transaction.reactive.TransactionSynchronizationManager:getSynchronizations  org.springframework.transaction.reactive.TransactionSynchronizationManager:clearSynchronization  org.springframework.transaction.reactive.GenericReactiveTransaction:hasTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:isNewTransaction  org.springframework.transaction.reactive.GenericReactiveTransaction:isDebug  org.springframework.transaction.reactive.GenericReactiveTransaction:getTransaction  org.springframework.transaction.reactive.AbstractReactiveTransactionManager:registerAfterCompletionWithExistingTransaction],0
<init> - [int  java.lang.Throwable] - void - [java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
setPropagationBehavior - [int] - void - [org.springframework.core.Constants:getValues],0
doSuspend - [java.lang.Object] - java.lang.Object - [java.lang.StringBuilder:append  java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
invoke - [java.lang.Object  java.lang.Object] - java.lang.Object - [org.springframework.transaction.reactive.TransactionalOperatorExtensionsKt$executeAndAwait$2$1:create  org.springframework.transaction.reactive.TransactionalOperatorExtensionsKt$executeAndAwait$2$1:invokeSuspend],0
<init> - [] - void - [java.lang.Object:getClass  java.lang.Object:getClass  org.springframework.jca.cci.connection.SingleConnectionFactory:getCloseSuppressingConnectionProxy  java.lang.Object:getClass  org.springframework.jca.cci.connection.SingleConnectionFactory:setTargetConnectionFactory],0
isCurrentTransactionReadOnly - [] - boolean - [java.lang.ThreadLocal:get],0
processCommit - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.AbstractPlatformTransactionManager:prepareForCommit  org.springframework.transaction.support.AbstractPlatformTransactionManager:triggerBeforeCommit  org.springframework.transaction.support.AbstractPlatformTransactionManager:triggerBeforeCompletion  org.springframework.transaction.support.DefaultTransactionStatus:hasSavepoint  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:isGlobalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:releaseHeldSavepoint  org.springframework.transaction.support.DefaultTransactionStatus:isNewTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:isGlobalRollbackOnly  org.springframework.transaction.support.AbstractPlatformTransactionManager:doCommit  org.springframework.transaction.support.AbstractPlatformTransactionManager:isFailEarlyOnGlobalRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isGlobalRollbackOnly  org.springframework.transaction.support.AbstractPlatformTransactionManager:isRollbackOnCommitFailure  org.springframework.transaction.support.AbstractPlatformTransactionManager:triggerBeforeCompletion],0
processRollback - [org.springframework.transaction.support.DefaultTransactionStatus  boolean] - void - [org.springframework.transaction.support.AbstractPlatformTransactionManager:triggerBeforeCompletion  org.springframework.transaction.support.DefaultTransactionStatus:hasSavepoint  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:rollbackToHeldSavepoint  org.springframework.transaction.support.DefaultTransactionStatus:isNewTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.AbstractPlatformTransactionManager:doRollback  org.springframework.transaction.support.DefaultTransactionStatus:hasTransaction  org.springframework.transaction.support.DefaultTransactionStatus:isLocalRollbackOnly  org.springframework.transaction.support.AbstractPlatformTransactionManager:isGlobalRollbackOnParticipationFailure  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.AbstractPlatformTransactionManager:doSetRollbackOnly  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.AbstractPlatformTransactionManager:isFailEarlyOnGlobalRollbackOnly],0
readObject - [java.io.ObjectInputStream] - void - [java.io.ObjectInputStream:defaultReadObject  java.lang.Object:getClass],0
toString - [] - java.lang.String - [org.springframework.transaction.support.DefaultTransactionDefinition:getDefinitionDescription  java.lang.StringBuilder:toString],0
obtainTargetConnectionFactory - [] - javax.resource.cci.ConnectionFactory - [org.springframework.jca.cci.connection.DelegatingConnectionFactory:getTargetConnectionFactory],0
setCurrentTransactionReadOnly - [boolean] - void - [org.springframework.transaction.reactive.TransactionContext:setCurrentTransactionReadOnly],0
lambda$null$23 - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
doRollback - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:getTransaction  org.springframework.jca.cci.connection.CciLocalTransactionManager$CciLocalTransactionObject:getConnectionHolder  org.springframework.jca.cci.connection.ConnectionHolder:getConnection  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
forCurrentTransaction - [] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:map],0
getReactiveTransaction - [org.springframework.transaction.TransactionDefinition] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:flatMap],0
triggerBeforeCompletion - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:isDebug],0
getConnectionFactory - [] - javax.resource.cci.ConnectionFactory - [org.springframework.jca.cci.core.CciTemplate:getConnectionFactory],0
invoke - [java.lang.Object  java.lang.reflect.Method  java.lang.Object[]] - java.lang.Object - [java.lang.reflect.Method:getName  java.lang.String:equals  java.lang.reflect.Method:getName  java.lang.String:equals  java.lang.reflect.Method:getName  java.lang.String:equals  java.lang.reflect.Method:getName  java.lang.String:equals  java.lang.reflect.Method:invoke  java.lang.reflect.InvocationTargetException:getTargetException],0
restoreThreadLocalStatus - [] - void - [java.lang.ThreadLocal:set],0
lambda$execute$8 - [org.springframework.transaction.reactive.TransactionCallback  org.springframework.transaction.reactive.TransactionContext] - org.reactivestreams.Publisher - [reactor.core.publisher.Mono:flatMapMany],0
doResume - [java.lang.Object  java.lang.Object] - void - [java.lang.StringBuilder:append  java.lang.Object:getClass  java.lang.Class:getName  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString],0
rollback - [org.springframework.transaction.ReactiveTransaction] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:flatMap],0
rollbackToHeldSavepoint - [] - void - [org.springframework.transaction.support.AbstractTransactionStatus:getSavepoint  org.springframework.transaction.support.AbstractTransactionStatus:getSavepointManager  org.springframework.transaction.support.AbstractTransactionStatus:getSavepointManager  org.springframework.transaction.support.AbstractTransactionStatus:setSavepoint],0
<clinit> - [] - void - [java.lang.Class:getClassLoader],0
values - [] - org.springframework.transaction.annotation.Propagation[] - [org.springframework.transaction.annotation.Propagation[]:clone],0
doGetResource - [java.lang.Object] - java.lang.Object - [java.lang.ThreadLocal:get  java.lang.ThreadLocal:remove],0
transactionInterceptor - [org.springframework.transaction.interceptor.TransactionAttributeSource] - org.springframework.transaction.interceptor.TransactionInterceptor - [org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionAttributeSource  org.springframework.transaction.interceptor.TransactionInterceptor:setTransactionManager],0
doJtaBegin - [org.springframework.transaction.jta.JtaTransactionObject  org.springframework.transaction.TransactionDefinition] - void - [org.springframework.transaction.jta.JtaTransactionManager:applyIsolationLevel  org.springframework.transaction.jta.JtaTransactionManager:determineTimeout  org.springframework.transaction.jta.JtaTransactionManager:applyTimeout  org.springframework.transaction.jta.JtaTransactionObject:getUserTransaction],0
afterPropertiesSet - [] - void - [org.springframework.transaction.jta.WebSphereUowTransactionManager:initUserTransactionAndTransactionManager  org.springframework.transaction.jta.WebSphereUowTransactionManager:lookupUowManager  org.springframework.transaction.jta.WebSphereUowTransactionManager:lookupDefaultUowManager],0
triggerBeforeCommit - [org.springframework.transaction.support.DefaultTransactionStatus] - void - [org.springframework.transaction.support.DefaultTransactionStatus:isNewSynchronization  org.springframework.transaction.support.DefaultTransactionStatus:isDebug  org.springframework.transaction.support.DefaultTransactionStatus:isReadOnly],0
getTransactionAttributeSource - [] - org.springframework.transaction.interceptor.TransactionAttributeSource - [org.springframework.transaction.interceptor.TransactionInterceptor:getTransactionAttributeSource],0
lambda$null$2 - [org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionInfo  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
getOriginalException - [] - java.lang.Throwable - [org.springframework.transaction.TransactionSystemException:getCause],0
<init> - [org.springframework.transaction.interceptor.TransactionInterceptor] - void - [org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor:setTransactionInterceptor],0
handleExistingTransaction - [org.springframework.transaction.TransactionDefinition  java.lang.Object  boolean] - org.springframework.transaction.TransactionStatus - [org.springframework.transaction.support.AbstractPlatformTransactionManager:suspend  org.springframework.transaction.support.AbstractPlatformTransactionManager:getTransactionSynchronization  org.springframework.transaction.support.AbstractPlatformTransactionManager:prepareTransactionStatus  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.support.AbstractPlatformTransactionManager:suspend  org.springframework.transaction.support.AbstractPlatformTransactionManager:isNestedTransactionAllowed  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.support.AbstractPlatformTransactionManager:useSavepointForNestedTransaction  org.springframework.transaction.support.AbstractPlatformTransactionManager:prepareTransactionStatus  org.springframework.transaction.support.DefaultTransactionStatus:createAndHoldSavepoint  org.springframework.transaction.support.AbstractPlatformTransactionManager:isValidateExistingTransaction  java.lang.Integer:intValue  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  org.springframework.core.Constants:toCode  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:append  java.lang.StringBuilder:toString  org.springframework.transaction.support.AbstractPlatformTransactionManager:getTransactionSynchronization  org.springframework.transaction.support.AbstractPlatformTransactionManager:prepareTransactionStatus],0
prepareSynchronization - [org.springframework.transaction.reactive.TransactionSynchronizationManager  org.springframework.transaction.reactive.GenericReactiveTransaction  org.springframework.transaction.TransactionDefinition] - void - [org.springframework.transaction.reactive.GenericReactiveTransaction:isNewSynchronization  org.springframework.transaction.reactive.GenericReactiveTransaction:hasTransaction  org.springframework.transaction.reactive.TransactionSynchronizationManager:setActualTransactionActive  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionIsolationLevel  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionReadOnly  org.springframework.transaction.reactive.TransactionSynchronizationManager:setCurrentTransactionName  org.springframework.transaction.reactive.TransactionSynchronizationManager:initSynchronization],0
lambda$null$2 - [org.springframework.transaction.ReactiveTransaction  java.lang.Throwable] - reactor.core.publisher.Mono - [reactor.core.publisher.Mono:then],0
